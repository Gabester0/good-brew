{"version":3,"sources":["Components/Map.js","Components/Brewcard.js","Components/Controls.js","Components/App.js","serviceWorker.js","index.js"],"names":["mapStyles","width","height","MapContainer","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","dist","google","props","zoom","style","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","Brewcard","className","id","concat","type","onClick","click","name","address","city","postal_code","state","country","phone","href","website_url","rel","target","string","length","split","splice","join","display","Map","list","onChange","handleChange","map","prev","disabled","prevDisabled","pageCount","next","nextDisabled","App","endpoint","_useState","useState","_useState2","slicedToArray","brewNames","setbrewNames","_useState3","_useState4","selectedstate","setselectedstate","_useState5","_useState6","page","setpage","fetch","_ref","asyncToGenerator","regenerator_default","mark","_callee","breweries","wrap","_context","axios","get","sent","data","stop","_x","_x2","useEffect","Controls","selected","e","event","preventDefault","s","curSelectedState","nextPage","prevPage","item","Components_Brewcard","brewery_type","street","latitude","longitude","slice","document","getElementById","setdetails","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c34c5a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '600px',\r\n  height: '300px'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={18}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n         lat: this.props.lat,\r\n         lng: this.props.lng\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyARSK4WqXH-LxsyJy5X4xcaMfYQ9MA6yX8'\r\n})(MapContainer);","import React from 'react';\r\nimport Map from './Map';\r\n\r\nfunction Brewcard(props){\r\n\r\n    function truncate(string){\r\n        if(string.length <= 46){\r\n            return string;\r\n        } else {\r\n            const arr = string.split(\"\");\r\n            return (arr.splice(0, 44).join(\"\") + '...');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"card\">\r\n            <div id={`general${props.id}`} className=\"card-general\">\r\n                <span className=\"type\">{props.type}</span>\r\n                <button id={`btn-general${props.id}`} className=\"info-button\" onClick={props.click}>More Info</button>\r\n                <h2>{props.name}</h2>\r\n                <p className=\"brewery-contact\">\r\n                    <span className=\"label\">Address:</span>\r\n                    {props.address}<br/>\r\n                    {props.city} {props.postal_code}, {props.state}<br/>\r\n                    {props.country}<br/>\r\n                    <span className=\"label\">Phone:</span>\r\n                    {props.phone}\r\n                    <br/>\r\n                    <a href={props.website_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        {truncate(props.website_url)}\r\n                    </a>\r\n                </p>\r\n            </div>\r\n\r\n            <div id={`details${props.id}`} style={{display: 'none'}} className=\"card-general\">\r\n                <span className=\"type\">{props.type}</span>\r\n                <button id={`btn-details${props.id}`} className=\"info-button\" onClick={props.click}>Back</button>\r\n                <h2>{props.name}</h2>\r\n                <Map\r\n                    id={`details${props.id}`}\r\n                \tlat={props.lat}\r\n                    lng={props.lng}\r\n                />\r\n            </div>\r\n\t    </div>\r\n        )\r\n      }\r\n\r\nexport default Brewcard;","import React from 'react';\r\n\r\nconst list = props=>{\r\n\r\n\tconst states = ['alabama','alaska','arizona','arkansas','california','colorado','connecticut','delaware','district_of_columbia','florida','georgia','hawaii','idaho','illinois','indiana','iowa','kansas','kentucky','louisiana','maine','maryland','massachusetts','michigan','minnesota','mississippi','missouri','montana','nebraska','nevada','new_hampshire','new_jersey','new_mexico','new_york','north_carolina','north_dakota','ohio','oklahoma','oregon','pennsylvania','puerto_rico','rhode_island','south_carolina','south_dakota','tennessee','texas','utah','vermont','virginia','washington','west_virginia','wisconsin','wyoming'];\r\n\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<div  className=\"flex-row\">\r\n\t\t\t\t\t<div className=\"flex-item\">\r\n\t\t\t\t\t\t<label>Current State</label>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<select id=\"state\" value={props.state} onChange={props.handleChange}>\r\n\t\t\t\t\t\t\t{states.map(state=> (<option key={state} value={state}>{state}</option>) )}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex-item\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<button onClick={props.prev} disabled={props.prevDisabled}>&#171;</button>\r\n\t\t\t\t\t\t\t<p>{`Page ${props.pageCount}`}</p>\r\n\t\t\t\t\t\t\t<button onClick={props.next} disabled={props.nextDisabled}>&#187;</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default list;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport '../App.scss';\r\n\r\nimport Brewcard from './Brewcard';\r\nimport Controls from './Controls';\r\n\r\nfunction App() {\r\n\r\n\tconst endpoint = 'https://api.openbrewerydb.org/breweries?by_state=';\r\n\r\n\tconst [brewNames, setbrewNames] = useState();\r\n\tconst [selectedstate, setselectedstate] = useState('pennsylvania');\r\n\tconst [page, setpage] = useState();\r\n\r\n\tconst fetch = async(endpoint, selectedstate)=>{\r\n\t\tconst breweries = await axios.get(endpoint + selectedstate);\r\n\t\tsetbrewNames(breweries.data);\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tsetpage(1);\r\n\t\tfetch(endpoint, selectedstate);\r\n\t}, []);\r\n\r\n\tfunction handleChange(event){\r\n\t\tsetselectedstate(event);\r\n\t\tsetpage(1);\r\n\t\tfetch(endpoint, event);\r\n\t}\r\n\r\n\tfunction nextPage(s){\r\n\t\tconst next = page + 1;\r\n\t\tconst curSelectedState = s;\r\n\t\tsetpage(next);\r\n\t\tsetselectedstate(curSelectedState);\r\n\t\tfetch(endpoint, `${curSelectedState}&page=${next}`);\r\n\t}\r\n\r\n\tfunction prevPage(s){\r\n\t\tconst prev = page - 1;\r\n\t\tconst curSelectedState = s;\r\n\t\tsetpage(prev);\r\n\t\tsetselectedstate(curSelectedState);\r\n\t\tfetch(endpoint, `${curSelectedState}&page=${prev}`);\r\n\t}\r\n\r\n\tfunction setdetails(event){\r\n\t\tconst id = event.target.id.slice(11, 15);\r\n\t\tconst type = event.target.id.slice(4, 11);\r\n\t\tif(type === \"general\"){\r\n\t\t\tdocument.getElementById(`general${id}`).style.display = 'none';\r\n\t\t\tdocument.getElementById(`details${id}`).style.display = 'block';\r\n\t\t} \r\n\t\tif(type === \"details\"){\r\n\t\t\tdocument.getElementById(`details${id}`).style.display = 'none';\r\n\t\t\tdocument.getElementById(`general${id}`).style.display = 'block';\r\n\t\t}\r\n\t}\r\n\r\n\tconst renderList = ()=>{\r\n\t\treturn(\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{brewNames.map(item =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t<Brewcard\r\n\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\ttype={item.brewery_type}\r\n\t\t\t\t\t\tname={item.name}\r\n\t\t\t\t\t\taddress={item.street}\r\n\t\t\t\t\t\tcity={item.city}\r\n\t\t\t\t\t\tpostal_code={item.postal_code}\r\n\t\t\t\t\t\tstate={item.state}\r\n\t\t\t\t\t\tcountry={item.country}\r\n\t\t\t\t\t\tphone={item.phone}\r\n\t\t\t\t\t\twebsite_url={item.website_url}\r\n\t\t\t\t\t\tlat={item.latitude}\r\n\t\t\t\t\t\tlng={item.longitude}\r\n\t\t\t\t\t\tclick={(event)=> setdetails(event)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t<h1>Good Brew</h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Controls\r\n\t\t\t\t\tselected={selectedstate ? selectedstate : \"Choose a state\"}\r\n\t\t\t\t\tstate={selectedstate}\r\n\t\t\t\t\tvalue={selectedstate}\r\n\t\t\t\t\thandleChange={e=> handleChange(e.target.value)}\r\n\t\t\t\t\tnextDisabled={brewNames ? brewNames.length !== 20 : false}\r\n\t\t\t\t\tprevDisabled={page > 1 ? false : true}\r\n\t\t\t\t\tpageCount={page}\r\n\t\t\t\t\tnext={(event)=> {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tconst s = selectedstate;\r\n\t\t\t\t\t\tnextPage(s);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tprev={(event)=> {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tconst s = selectedstate;\r\n\t\t\t\t\t\tprevPage(s)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t{ brewNames ? renderList(brewNames) : null}\r\n\t\t\t\t</section>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<p>&copy; 2019 Gabriel Eipper</p>\r\n\t\t\t\t\t<p>Made with Create React App, Open Brewery DB, Google Maps React, and SASS</p>\r\n\t\t\t\t</footer>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}